// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/app_usage_events/actions/destructively_purge_all_and_reseed": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\nDestroys all existing events. Populates new usage events, one for each started app. All populated events will have a created_at value of current time. There is the potential race condition if apps are currently being started, stopped, or scaled. The seeded usage events will have the same guid as the app.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App Usage Events"
                ],
                "summary": "Purge and seed app usage events",
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/app_usage_events/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieve an app usage event.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App Usage Events"
                ],
                "summary": "List app usage events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page;\\n valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "\tValue to sort by. Defaults to ascending; prepend with - to sort descending. Valid value is created_at",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filters out events before and including the event with the given guid",
                        "name": "after_guid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-delimited list of usage event guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app_usage_events.AppUsageEvent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieve all apps the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "List apps",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space guids to filter by",
                        "name": "space_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of stack names to filter by",
                        "name": "stacks",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Lifecycle type to filter by; valid values are buildpack, docker",
                        "name": "lifecycle_type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include a list of unique related resources in the response; valid values are space and spaceorganization",
                        "name": "include",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.AppList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, SpaceDeveloper'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Create an app",
                "parameters": [
                    {
                        "description": "Create App",
                        "name": "App",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apps.CreateApp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.App"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include additional related resources in the response; valid values are space and space.organization",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.App"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Delete an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Update an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update App",
                        "name": "App",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apps.UpdateApp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.App"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/actions/restart": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Space Developer\nThis endpoint will synchronously stop and start an application. Unlike the start and stop actions, this endpoint will error if the app is not successfully stopped in the runtime. For restarting applications without downtime, see the deployments resource.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Stop an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.App"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/actions/start": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Start an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.App"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/actions/stop": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Space Developer\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Stop an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.App"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/builds": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Space Auditor Space Developer Org Auditor'\nRetrieve all builds for the app.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Builds"
                ],
                "summary": "List builds",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of build states to filter by",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/builds.BuildList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/droplets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nRetrieve a list of droplets belonging to an app.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "List droplets for an app",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of droplet to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of droplet states to filter by",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "If true, only include the droplet currently assigned to the app",
                        "name": "space_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Droplet Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/droplets.DropletList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/droplets/current": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get current droplet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.AppDroplet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/env": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Space Developer'\nRetrieve the environment variables that will be provided to an app at runtime. It will include environment variables for Environment Variable Groups and Service Bindings.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get environment for an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.AppEnv"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/environment_variables": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Space Developer'\nRetrieve the environment variables that are associated with the given app. For the entire list of environment variables that will be available to the app at runtime, see the env endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get environment variables for an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.AppEnvVariable"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nUpdate the environment variables associated with the given app. The variables given in the request will be merged with the existing app environment variables. Any requested variables with a value of null will be removed from the app. Environment variable names may not start with VCAP_. PORT is not a valid environment variable.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Stop an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "App Env",
                        "name": "Env",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apps.AppEnvVar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.AppEnvVariable"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/features": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint retrieves the list of features for the specified app.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App Features"
                ],
                "summary": "List app features",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app_features.AppFeatureList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/features/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App Features"
                ],
                "summary": "Get an app feature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App Feature Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app_features.AppFeature"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App Features"
                ],
                "summary": "Update an app feature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "App Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update App Feature",
                        "name": "UpdateAppFeature",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app_features.UpdateAppFeature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app_features.AppFeature"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/packages": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Admin Read-Only, Global Auditor, Org Manager, Space Auditor, Space Developer, Space Manager'\nRetrieve packages for an app that the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "List packages for an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of package guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of package states to filter by",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of package types to filter by",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by; defaults to ascending. Prepend with - to sort descending. Valid values are created_at, updated_at",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/packages.Package"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/permissions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nGet the current user’s permissions for the given app. If a user can see an app, then they can see its basic data. Only admin, read-only admins, and space developers can read sensitive data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.AppPermission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/processes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Admin Read-Only, Global Auditor, Org Manager, Space Auditor, Space Developer, Space Manager'\nRetrieves all processes belonging to an app.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "List processes for app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of process guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of process types to filter by",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/processes/{type}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Admin Read-Only, Global Auditor, Org Manager, Space Auditor, Space Developer, Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "Get a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "process type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/processes/{type}/actions/scale": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "Scale a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "app type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Scale Process",
                        "name": "ScaleProcess",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/processes.ScaleProcess"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/processes/{type}/instances/{index}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Space Developer'\nTerminate an instance of a specific process. Health management will eventually restart the instance.\nThis allows a user to stop a single misbehaving instance of a process.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "Terminate a process instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "app type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/processes/{type}/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Admin Read-Only, Global Auditor, Org Manager, Space Auditor, Space Developer, Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "Get stats for a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "process type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/relationships/current_droplet": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint retrieves the current droplet relationship for an app.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get current droplet association for an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.AppDropletAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Space Developer\nSet the current droplet for an app. The current droplet is the droplet that the app will use when running.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Set current droplet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "App Set Droplet",
                        "name": "AppSetDroplet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apps.AppSetDroplet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.AppDropletAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/routes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"Admin\" \"Admin\" Read-Only \"Global Auditor\" \"Org Manager\" \"Space Auditor\" \"Space Developer\" \"Space Manager\"\nRetrieve all routes that have destinations that point to the given app.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "List routes for an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "route guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/ssh_enabled": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nReturns if an application’s runtime environment will accept ssh connections. If ssh is disabled, the reason field will describe whether it is disabled globally, at the space level, or at the app level.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get SSH enabled for an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apps.AppSSH"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/apps/{guid}/tasks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles All Roles\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "List tasks for an app",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasks.AppTask"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/audit_events": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Read-Only Admin Global Auditor Org Auditor Org Manager Space Auditor Space Developer Space Manager'\nRetrieve all audit events the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audit Events"
                ],
                "summary": "List audit events",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of event types to filter by",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of target guids to filter by. Also supports filtering by exclusion.",
                        "name": "target_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space guids to filter by",
                        "name": "space_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/audit_events.AuditEventList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/audit_events/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Space Auditor Space Developer Org Auditor'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audit Events"
                ],
                "summary": "Get an audit event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audit Event Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/audit_events.AuditEvent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/buildpacks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieve all buildpacks the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildpacks"
                ],
                "summary": "List buildpacks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of buildpack names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of stack names to filter by",
                        "name": "stacks",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buildpacks.BuildPackList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildpacks"
                ],
                "summary": "Create a buildpack",
                "parameters": [
                    {
                        "description": "Create BuildPack",
                        "name": "CreateBuildPack",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/buildpacks.CreateBuildPack"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buildpacks.BuildPack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/buildpacks/{guid}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildpacks"
                ],
                "summary": "Delete a buildpack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BuildPack Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildpacks"
                ],
                "summary": "Update a buildpack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BuildPack Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update BuildPack",
                        "name": "UpdateBuildPack",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/buildpacks.UpdateBuildPack"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buildpacks.BuildPack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/buildpacks/{guid}/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\n",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildpacks"
                ],
                "summary": "Update a buildpack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BuildPack Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "A binary zip file containing the buildpack bits",
                        "name": "bits",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buildpacks.BuildPack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/builds": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieve all builds the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Builds"
                ],
                "summary": "List builds",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of build states to filter by",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "app_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of package guids to filter by",
                        "name": "package_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/builds.BuildList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Builds"
                ],
                "summary": "Create a build",
                "parameters": [
                    {
                        "description": "Create Build",
                        "name": "CreateBuild",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/builds.CreateBuild"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/builds.Build"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/builds/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Space Auditor Space Developer Org Auditor'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Builds"
                ],
                "summary": "Get a build",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Build Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/builds.Build"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer Build State Updater'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Builds"
                ],
                "summary": "Update a build",
                "parameters": [
                    {
                        "description": "Update Build",
                        "name": "UpdateBuild",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/builds.UpdateBuild"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/builds.Build"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/deployments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Read-Only Admin Global Auditor Org Auditor Org Manager Space Auditor Space Developer Space Manager'\nRetrieve all deployments the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployments"
                ],
                "summary": "List  deployment",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "app_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of build states to filter by",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of status reasons to filter by; valid values include DEPLOYING, CANCELING, DEPLOYED, CANCELED, SUPERSEDED, and DEGENERATE",
                        "name": "status_reasons",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of status values to filter by; valid values include ACTIVE and FINALIZED",
                        "name": "status_values",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deployments.DeploymentList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployments"
                ],
                "summary": "Create a deployment",
                "parameters": [
                    {
                        "description": "Create Deployment",
                        "name": "CreateDeployment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deployments.CreateDeployment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deployments.Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/deployments/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployments"
                ],
                "summary": "Get a deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deployments.Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployments"
                ],
                "summary": "Update a deployment",
                "parameters": [
                    {
                        "description": "Update Deployment",
                        "name": "UpdateDeployment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deployments.UpdateDeployment"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Deployment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deployments.Deployment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/deployments/{guid}/actions/cancel": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Deployments"
                ],
                "summary": "Cancel a deployment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/domains": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieve all domains the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "List domains",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of domain  names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domains.DomainList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Org Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "Create a domain",
                "parameters": [
                    {
                        "description": "Create Domain",
                        "name": "CreateDomain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domains.CreateDomain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domains.Domain"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/domains/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Read-Only Admin Global Auditor Org Auditor Org Billing Manager Can only view domains without an organization relationship Org Manager Space Auditor Space Developer Space Manager\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "Get a domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domains.Domain"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Org Manager\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "Delete a domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Org Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "Update a domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Domains",
                        "name": "UpdateDomains",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domains.UpdateDomains"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domains.Domain"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/domains/{guid}/relationships/shared_organizations": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Org Manager\nThis endpoint shares an organization-scoped domain to other organizations specified by a list of organization guids. This will allow any of the other organizations to use the organization-scoped domain.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "Share a domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Share Domains",
                        "name": "ShareDomains",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domains.ShareDomains"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domains.Domain"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/domains/{guid}/relationships/shared_organizations/{org_guid}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Org Manager\nThis endpoint removes an organization from the list of organizations an organization-scoped domain is shared with. This prevents the organization from using the organization-scoped domain.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "Unshare a domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization Guid",
                        "name": "org_guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domains.Domain"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/domains/{guid}/route_reservations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles\nCheck if a specific route for a domain exists, regardless of the user’s visibility for the route in case the route belongs to a space the user does not belong to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Check reserved routes for a domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hostname to filter by; defaults to empty string if not provided and only applicable to http routes",
                        "name": "host",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Path to filter by; defaults to empty string if not provided and only applicable to http routes",
                        "name": "path",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Port to filter by; only applicable to tcp routes and required for tcp routes",
                        "name": "port",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/droplets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All Roles'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "List droplets",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of droplet to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of droplet states to filter by",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "app_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space guids to filter by",
                        "name": "space_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/droplets.DropletList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, SpaceDeveloper'\nThis endpoint is only for creating a droplet without a package. To create a droplet based on a package, see Create a build.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "Create a droplet",
                "parameters": [
                    {
                        "description": "Create Droplet",
                        "name": "CreateDroplet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/droplets.CreateDroplet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/droplets.Droplet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/droplets/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "Get a droplet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Droplet Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/droplets.Droplet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin  Space Developer\nCopy a droplet to a different app. The copied droplet excludes the environment variables listed on the source droplet.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "Copy a droplet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Droplet Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CopyDroplet",
                        "name": "CopyDroplet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/droplets.CopyDroplet"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Source guid of the droplet to be copied",
                        "name": "source_guid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/droplets.Droplet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin  Space Developer\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "Delete a droplet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Droplet Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Org Manager Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "Update a droplet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Droplet Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Droplet",
                        "name": "UpdateDroplet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/droplets.UpdateDroplet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/droplets.Droplet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/droplets/{guid}/download": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager\nDownload a gzip compressed tarball file containing a Cloud Foundry compatible droplet. When using a remote blobstore, such as AWS, the response is a redirect to the actual location of the bits. If the client is automatically following redirects, then the OAuth token that was used to communicate with Cloud Controller will be relayed on the new redirect request. Some blobstores may reject the request in that case. Clients may need to follow the redirect without including the OAuth token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "Download droplet bits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Droplet Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/droplets/{guid}/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager\nUpload a gzip compressed tarball file containing a Cloud Foundry compatible droplet. The file must be sent as part of a multi-part form.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "Upload droplet bits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Droplets Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "A gzip compressed tarball file with .tgz extension containing the droplet bits",
                        "name": "bits",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/droplets.Droplet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/environment_variable_groups/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environment Variable Groups"
                ],
                "summary": "Get an environment variable group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Environment variable name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/environment_variable_groups.EnvironmentVariableGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\nUpdate the environment variable group. The variables given in the request will be merged with the existing environment variable group. Any requested variables with a value of null will be removed from the group. Environment variable names may not start with VCAP_. PORT is not a valid environment variable.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environment Variable Groups"
                ],
                "summary": "Update environment variable group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Environment variable name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update environment variable group",
                        "name": "interface{}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/environment_variable_groups.EnvironmentVariableGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/feature_flags": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles All Roles\nRetrieve all feature_flags.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flags"
                ],
                "summary": "List feature flags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/feature_flags.GetFeatureFlags"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/feature_flags/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles All Roles\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flags"
                ],
                "summary": "Get a feature flag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FeatureFlag name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/feature_flags.FeatureFlags"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flags"
                ],
                "summary": "Update a feature flag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FeatureFlag Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Feature Flags",
                        "name": "UpdateFeatureFlags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/feature_flags.UpdateFeatureFlags"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/feature_flags.FeatureFlags"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/info": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Get platform info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/info.PlatformInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/info/usage_summary": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Admin Read-Only Global Auditor\nThis endpoint retrieves a high-level summary of usage across the entire Cloud Foundry installation.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Get platform usage summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/info.PlatformUsageSummary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/isolation_segments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieves all isolation segments to which the user has access. For admin, this is all the isolation segments in the system. For an org manager, this is the isolation segments in the allowed list for any organization to which the user belongs. For any other user, this is the isolation segments assigned to any spaces to which the user has access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IsolationSegment"
                ],
                "summary": "List isolation segments",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of isolation segment guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of isolation segment names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Lifecycle type to filter by; valid values are buildpack, docker",
                        "name": "lifecycle_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.IsolationSegments"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IsolationSegment"
                ],
                "summary": "Create an isolation segment",
                "parameters": [
                    {
                        "description": "Create Isolation Segment",
                        "name": "CreateIsolationSegment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.CreateIsolationSegment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.IsolationSegment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/isolation_segments/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IsolationSegment"
                ],
                "summary": "Get an isolation segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IsolationSegment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.IsolationSegment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin\nAn isolation segment cannot be deleted if it is entitled to any organization.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IsolationSegment"
                ],
                "summary": "Delete an isolation segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IsolationSegment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IsolationSegment"
                ],
                "summary": "Update an isolation segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IsolationSegment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update IsolationSegment",
                        "name": "UpdateIsolationSegment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.UpdateIsolationSegment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.IsolationSegment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/isolation_segments/{guid}/organizations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only, Global Auditor, Org Auditor, Org Billing Manager, Org Manager'\nRetrieve the organizations entitled to the isolation segment. Return only the organizations the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "List organizations for isolation segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "isolation_segment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organizations.Organizations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/isolation_segments/{guid}/relationships/organizations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles All Roles\nThis endpoint lists the organizations entitled for the isolation segment. For an Admin, this will list all entitled organizations in the system. For any other user, this will list only the entitled organizations to which the user belongs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IsolationSegment"
                ],
                "summary": "List organizations relationship",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IsolationSegment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.OrganizationsRelationship"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\nThis endpoint entitles the specified organizations for the isolation segment. In the case where the specified isolation segment is the system-wide shared segment, and if an organization is not already entitled for any other isolation segment, then the shared isolation segment automatically gets assigned as the default for that organization.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IsolationSegment"
                ],
                "summary": "Entitle organizations for an isolation segment",
                "parameters": [
                    {
                        "description": "Entitle Organizations IsolationSegment",
                        "name": "EntitleOrganizationsIsolationSegment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.EntitleOrganizationsIsolationSegment"
                        }
                    },
                    {
                        "type": "string",
                        "description": "IsolationSegment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.OrganizationsRelationship"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/isolation_segments/{guid}/relationships/organizations/{org_guid}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin\nThis endpoint revokes the entitlement for the specified organization to the isolation segment. If the isolation segment is assigned to a space within an organization, the entitlement cannot be revoked. If the isolation segment is the organization’s default, the entitlement cannot be revoked.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IsolationSegment"
                ],
                "summary": "Revoke entitlement to isolation segment for an organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization Guid",
                        "name": "org_guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "IsolationSegment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/isolation_segments/{guid}/relationships/spaces": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint lists the spaces to which the isolation segment is assigned. For an Admin, this will list all associated spaces in the system. For an org manager, this will list only those associated spaces belonging to orgs for which the user is a manager. For any other user, this will list only those associated spaces to which the user has access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IsolationSegment"
                ],
                "summary": "List spaces relationship",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IsolationSegment Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/isolation_segments.SpacesRelationship"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/jobs/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jobs.Jobs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/organization_quotas": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All Roles'\nThis endpoint lists all organization quota resources.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Quotas"
                ],
                "summary": "List organization quotas",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization quota guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization quota names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organization_quotas.OrganizationQuota"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\nThis endpoint creates a new organization quota, but does not assign it to a specific organization unless an organization GUID is provided in the relationships.organizations parameter.\nTo create an organization quota you must be an admin.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Quotas"
                ],
                "summary": "Create an organization quota",
                "parameters": [
                    {
                        "description": "Create OrganizationQuotas",
                        "name": "CreateOrganizationQuotas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization_quotas.CreateOrganizationQuotas"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/organization_quotas.OrganizationQuota"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/organization_quotas/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All Roles'\nThis endpoint gets an individual organization quota resource.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Quotas"
                ],
                "summary": "Get an organization quota",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organizations_quotas guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organization_quotas.OrganizationQuota"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\nOrganization quotas cannot be deleted when applied to any organizations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Quotas"
                ],
                "summary": "Delete an organization quota",
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin'\nThis endpoint will only update the parameters specified in the request body. Any unspecified parameters will retain their existing values.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Quotas"
                ],
                "summary": "Update an organization quota",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organizations_quotas guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Organization Quota",
                        "name": "UpdateOrganizationQuota",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization_quotas.UpdateOrganizationQuota"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organization_quotas.OrganizationQuota"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/organization_quotas/{guid}/relationships/organizations": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\nThis endpoint applies an organization quota to one or more organizations.\nOnly admin users can apply an organization quota to an organization.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization Quotas"
                ],
                "summary": "Apply an organization quota to an organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organizations_quotas guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Apply Organization Quotas",
                        "name": "ApplyOrganizationQuotas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organization_quotas.ApplyOrganizationQuotas"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/organization_quotas.OrganizationQuota"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted 'All Roles'\nRetrieve all organizations the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "List organizations",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Lifecycle type to filter by; valid values are buildpack, docker",
                        "name": "lifecycle_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organizations.Organizations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, If the user_org_creation feature flag is enabled, any user with the cloud_controller.write scope will be able to create organizations.'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Create an organization",
                "parameters": [
                    {
                        "description": "Create Organizations",
                        "name": "CreateOrganizations",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organizations.CreateOrganizations"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organizations.Organizations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/organizations/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted 'All Roles'\nRetrieve all organizations the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get an organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organizations.Organizations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\nWhen an organization is deleted, user roles associated with the organization will also be deleted.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete an organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Org Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Update an organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Organizations",
                        "name": "UpdateOrganizations",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organizations.UpdateOrganizations"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organizations.Organizations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/organizations/{guid}/domains": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieve all domains available in an organization for the current user. This will return unscoped domains (those without an owning organization), domains that are scoped to the given organization (owned by the given organization), and domains that have been shared with the organization.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domains"
                ],
                "summary": "List domains for an organization",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of domain  names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domains.OrganizationDomainsList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/organizations/{guid}/domains/default": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Space Developer Space Manager Space Auditor Org Auditor Org Manager Org Billing Manager Can only view domains without an organization relationship Admin Admin Read-Only Global Auditor'\nRetrieve the default domain for a given organization.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get default domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organizations.Organizations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/organizations/{guid}/relationships/default_isolation_segment": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted 'All Roles'\nRetrieve the default isolation segment for a given organization.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get default isolation segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organizations.Organizations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Org Manager'\nSet the default isolation segment for a given organization. Only isolation segments that are entitled to the organization are eligible to be the default isolation segment.\nApps will not run in the new default isolation segment until they are restarted.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Assign default isolation segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Isolation segment relationship; apps will run in this isolation segment; set data to null to remove the relationship",
                        "name": "DefaultIsolationSegmentOrganizations",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/organizations.DefaultIsolationSegmentOrganizations"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organizations.Organizations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/organizations/{guid}/usage_summary": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted 'All Roles'\nThis endpoint retrieves the specified organization object’s memory and app instance usage summary.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get usage summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/organizations.Organizations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/packages": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'All Roles'\nRetrieve all packages the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "List packages",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of package guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of package states to filter by",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of package types to filter by",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "app_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space guids to filter by",
                        "name": "space_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by; defaults to ascending. Prepend with - to sort descending. Valid values are created_at, updated_at",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/packages.Package"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Space Developer'\nThis endpoint copies the bits of a source package to a target package.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Copy a package",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "GUID of the source package to copy from",
                        "name": "source_guid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Copy Packages",
                        "name": "CopyPackages",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/packages.CopyPackage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/packages.Package"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/packages/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Admin Read-Only, Global Auditor, Org Manager, Space Auditor, Space Developer, Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Get a package",
                "parameters": [
                    {
                        "type": "string",
                        "description": "package guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/packages.Package"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Delete a package",
                "parameters": [
                    {
                        "type": "string",
                        "description": "package guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/packages.Package"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Update a package",
                "parameters": [
                    {
                        "type": "string",
                        "description": "package guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Packages",
                        "name": "UpdatePackage",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/packages.UpdatePackage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/packages.Package"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/packages/{guid}/download": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Space Developer'\nThis endpoint downloads the bits of an existing package.\nWhen using a remote blobstore, such as AWS, the response is a redirect to the actual location of the bits.\nIf the client is automatically following redirects, then the OAuth token that was used to communicate with Cloud Controller will be replayed on the new redirect request.\nSome blobstores may reject the request in that case. Clients may need to follow the redirect without including the OAuth token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Download package bits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "package guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/packages.Package"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/packages/{guid}/droplets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nRetrieve a list of droplets belonging to a package.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Droplets"
                ],
                "summary": "List droplets for a package",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Packages Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of droplet to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of droplet states to filter by",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "app_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/droplets.DropletList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/packages/{guid}/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Space Developer'\nThis upload endpoint takes a multi-part form requests for packages of type bits.\nThe request requires either a .zip file uploaded under the bits field or a list of resource match objects under the resources field. These field may be used together.\nThe resources field in the request accepts the v2 resources object format.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Packages"
                ],
                "summary": "Upload package bits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "package guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "A binary zip file containing the package bits",
                        "name": "bits",
                        "in": "formData"
                    },
                    {
                        "type": "object",
                        "description": "Fingerprints of the application bits that have previously been pushed to Cloud Foundry, formatted as resource match objects",
                        "name": "resources",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/packages.Package"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/processes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'All Roles'\nRetrieve all processes the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "List processes",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of process guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of process types to filter by",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "app_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space guids to filter by",
                        "name": "space_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/processes/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Admin Read-Only, Global Auditor, Org Manager, Space Auditor, Space Developer, Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "Get a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "Update a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Process",
                        "name": "UpdateProcess",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/processes.UpdateProcess"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/processes/{guid}/actions/scale": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "Scale a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Scale Process",
                        "name": "ScaleProcess",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/processes.ScaleProcess"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/processes/{guid}/instances/{index}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Space Developer'\nTerminate an instance of a specific process. Health management will eventually restart the instance.\nThis allows a user to stop a single misbehaving instance of a process.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "Terminate a process instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "app type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/processes/{guid}/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Admin Read-Only, Global Auditor, Org Manager, Space Auditor, Space Developer, Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Processes"
                ],
                "summary": "Get stats for a process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "process guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processes.Process"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/resource_matches": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'All Roles'\nThis endpoint returns a list of cached resources from the input list.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource Matches"
                ],
                "summary": "Create a resource match",
                "parameters": [
                    {
                        "description": "List of resources to check for in the resource cache",
                        "name": "resources",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resource_matches.ResourceMatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resource_matches.ResourceMatch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"All Roles\"\nThis endpoint lists roles that the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "List roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles\nThis endpoint creates a new role for a user in an organization or space.\nTo create an organization role you must be an admin or organization manager in the organization associated with the role.\nTo create a space role you must be an admin, an organization manager in the parent organization of the space associated with the role, or a space manager in the space associated with the role.\nFor a user to be assigned a space role, the user must already have an organization role in the parent organization.\nIf the associated user is valid but does not exist in Cloud Controller’s database, a user resource will be created automatically.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Create a role",
                "parameters": [
                    {
                        "description": "Role to create; see valid role types",
                        "name": "type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A relationship to a user; the user can be defined by either a guid or, if the set_roles_by_username feature_flag is enabled, a username (with the option of including an origin to disambiguate it)",
                        "name": "relationships.user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A relationship to an organization; required only when creating an organization role",
                        "name": "relationships.organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A relationship to a space; required only when creating a space role",
                        "name": "relationships.space",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/roles/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles\nThis endpoint gets an individual role resource.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get a role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Optionally include a list of unique related resources in the response; valid values are user, space, and organization",
                        "name": "include",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles\nThis endpoint lists roles that the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "List roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/routes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"All Roles\"\nRetrieve all routes the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "List routes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles 'Admin, Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Create a route",
                "parameters": [
                    {
                        "description": "A relationship to the space containing the route; routes can only be mapped to destinations in that space",
                        "name": "relationships.space",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A relationship to the domain of the route",
                        "name": "relationships.domain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The host component for the route; not compatible with routes specifying the tcp protocol",
                        "name": "host",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The path component for the route; should begin with a / and not compatible with routes specifying the tcp protocol",
                        "name": "path",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The port the route will listen on; only compatible with routes leveraging a domain that supports the tcp protocol. For tcp domains, a port will be randomly assigned if not specified",
                        "name": "port",
                        "in": "body",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Annotations applied to the route",
                        "name": "metadata.annotations",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Labels applied to the route",
                        "name": "metadata.labels",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/routes/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"Admin\" Read-Only, \"Admin\", \"Global Auditor\", \"Org Auditor\", \"Org Manager\", \"Space Auditor\", \"Space Developer\", \"Space Manager\"\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Get a route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Optionally include additional related resources in the response Valid values are domain, space.organization, space",
                        "name": "include",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"Admin\", \"Space Developer\"\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Delete a route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "route guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"Admin\", \"Space Developer\"\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Update a route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "route guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Labels applied to the route",
                        "name": "metadata.labels",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Annotations applied to the route",
                        "name": "metadata.annotations",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/routes/{guid}/destinations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"Admin\" Read-Only \"Admin\" \"Global Auditor\" \"Org Auditor\" \"Org Manager\" \"Space Auditor\" \"Space Developer\" \"Space Manager\"\nRetrieve all destinations associated with a route.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "List destinations for a route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "route guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-delimited list of destination guids to filter by",
                        "name": "guids",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "app_guids",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"Admin\" \"Space Developer\"\nAdd one or more destinations to a route, preserving any existing destinations.\nNote that weighted destinations cannot be added with this endpoint. To add weighted destinations, replace all destinations for a route at once using the replace destinations endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Insert destinations for a route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "route guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of destinations to add to route; destinations without process.type specified will get process type ",
                        "name": "destinations",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"Admin\" \"Space Developer\"\nReplaces all destinations for a route, removing any destinations not included in the provided list.\nIf using weighted destinations, all destinations provided here must have a weight specified,\nand all weights for this route must sum to 100. If not, all provided destinations must not have a weight.\nMixing weighted and unweighted destinations for a route is not allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Replace all destinations for a route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "route guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of destinations use for route. Destinations without process.type specified will get process type ",
                        "name": "destinations",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/routes/{guid}/destinations/{destination_guid}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"Admin\", \"Space Developer\"\nRemove a destination from a route.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Remove destination for a route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "route guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "destination guid",
                        "name": "destination_guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_brokers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Space Developer (only space-scoped brokers)'\nThis endpoint retrieves the service brokers the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Brokers"
                ],
                "summary": "List service brokers",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service broker names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_brokers.ServiceBrokerList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nThis endpoint creates a new service broker and a job to synchronize the service offerings and service plans with those in the broker’s catalog. The Location header refers to the created job which syncs the broker with the catalog. See Service broker jobs for more information and limitations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Brokers"
                ],
                "summary": "Create a service broker",
                "parameters": [
                    {
                        "description": "Create ServiceBroker",
                        "name": "CreateServiceBroker",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_brokers.CreateServiceBroker"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_brokers/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Space Developer (only space-scoped brokers)'\nThis endpoint retrieves the service broker by GUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Brokers"
                ],
                "summary": "Get a service broker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceBroker Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_brokers.ServiceBroker"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer (only space-scoped brokers)'\nThis endpoint creates a job to delete an existing service broker. The Location header refers to the created job. See Service broker jobs for more information and limitations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Brokers"
                ],
                "summary": "Delete a service broker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceBroker Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer (only space-scoped brokers)'\nThis endpoint updates a service broker. Depending on the parameters specified, the endpoint may respond with a background job, and it may synchronize the service offerings and service plans with those in the broker’s catalog.\nWhen a service broker has a synchronization job in progress, only updates with metadata are permitted until the synchronization job is complete.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Brokers"
                ],
                "summary": "Update a service broker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceBroker Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ServiceBroker",
                        "name": "UpdateServiceBroker",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_brokers.UpdateServiceBroker"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/service_brokers.ServiceBroker"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_credential_bindings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint retrieves the service credential bindings the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Credential Bindings"
                ],
                "summary": "List service credential bindings",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service credential binding guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service instance guids to filter by",
                        "name": "service_instance_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service instance names to filter by",
                        "name": "service_instance_names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "app_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app names to filter by",
                        "name": "app_names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service plan guids to filter by",
                        "name": "service_plan_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service plan names to filter by",
                        "name": "service_plan_names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service offering guids to filter by",
                        "name": "service_offering_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service offering names to filter by",
                        "name": "service_offering_names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Type of credential binding to filter by. Valid values are: app or key",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "omma-delimited list of service route binding guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include a list of unique related resources in the response. Valid values are: app, service_instance",
                        "name": "include",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_credential_bindings.ServiceCredentialBindingList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin SpaceDeveloper'\nThis endpoint creates a new service credential binding. Service credential bindings can be of type app or key; key is only valid for managed service instances.\nIf failures occur when creating a service credential binding for a managed service instances, the API might execute orphan mitigation steps accordingly to cases outlined in the OSBAPI specification",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Credential Bindings"
                ],
                "summary": "Create a service credential binding",
                "parameters": [
                    {
                        "description": "Create ServiceCredentialBinding",
                        "name": "CreateServiceCredentialBinding",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_credential_bindings.CreateServiceCredentialBinding"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/service_credential_bindings.ServiceCredentialBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_credential_bindings/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint retrieves the service credential binding by GUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Credential Bindings"
                ],
                "summary": "Get a service credential binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceCredentialBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include a list of unique related resources in the response. Valid values are: app, service_instance",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_credential_bindings.ServiceCredentialBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nThis endpoint deletes a service credential binding. When deleting credential bindings originated from user provided service instances, the delete operation does not require interactions with service brokers, therefore the API will respond synchronously to the delete request.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Credential Bindings"
                ],
                "summary": "Delete a service credential binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceCredentialBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nThis endpoint updates a service credential binding with labels and annotations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Credential Bindings"
                ],
                "summary": "Update a service credential binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceCredentialBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ServiceCredentialBinding",
                        "name": "UpdateServiceCredentialBinding",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_credential_bindings.UpdateServiceCredentialBinding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_credential_bindings.ServiceCredentialBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_credential_bindings/{guid}/details": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Space Developer'\nThis endpoint retrieves the service credential binding details.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Credential Bindings"
                ],
                "summary": "Get a service credential binding details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceCredentialBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_credential_bindings/{guid}/parameters": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Space Developer'\nQueries the Service Broker for the parameters associated with this service credential binding. The broker catalog must have enabled the bindings_retrievable feature for the Service Offering. Check the Service Offering object for the value of this feature flag. This endpoint is not available for User-Provided Service Instances.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Credential Bindings"
                ],
                "summary": "Get parameters for a service credential binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceCredentialBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_instances": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nThis endpoint retrieves the service instances the user has access to. At the moment, this endpoint only returns managed service instances. This may change in the future.\nThis includes access granted by service instance sharing.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "List service instances",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service instance names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space guids to filter by",
                        "name": "space_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service plan guids to filter by",
                        "name": "service_plan_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service plan names to filter by",
                        "name": "service_plan_names",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name",
                            "relationships.organization"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[space]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[space.organization]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name",
                            "relationships.service_offering"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_plan]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name",
                            "description",
                            "documentation_url",
                            "tags",
                            "relationships.service_broker"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_plan.service_offering]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_plan.service_offering.service_broker]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_instances.ServiceInstanceList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, SpaceDeveloper'\nThis endpoint creates a new service instance. Service instances can be of type managed or user-provided, and the required parameters are different for each type. User provided service instances do not require interactions with service brokers.\nIf failures occur when creating managed service instances, the API might execute orphan mitigation steps accordingly to cases outlined in the OSBAPI specification",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "Create a service instance",
                "parameters": [
                    {
                        "description": "Create ServiceInstanceProvide",
                        "name": "CreateServiceInstanceProvide",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_instances.CreateServiceInstanceProvide"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/service_instances.ServiceInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_instances/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint retrieves the service instance by GUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "Get a service instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceInstance Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[space]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[space.organization]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_plan]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "guid",
                            "description",
                            "documentation_url",
                            "tags"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_plan.service_offering]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_plan.service_offering.service_broker]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_instances.ServiceInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nThis endpoint deletes a service instance and any associated service credential bindings or service route bindings. The service instance is removed from all spaces where it is available.\nUser provided service instances do not require interactions with service brokers, therefore the API will respond synchronously to the delete request.\nFor managed service instances, the API will respond asynchronously. If a service credential binding or service route binding cannot be deleted synchronously, then the operation will fail, and the deletion of the binding will continue in the background. The operation can be retried until it is successful.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "Delete a service instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceCredentialBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "If true, deletes the service instance and all associated resources without any interaction with the service broker.",
                        "name": "purge",
                        "in": "query"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/service_instances.ServiceInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "Update a service instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceCredentialBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ServiceInstance",
                        "name": "UpdateServiceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_instances.UpdateServiceInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_instances.ServiceInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_instances/{guid}/credentials": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Space Developer Space Manager'\nRetrieves the credentials for a user-provided service instance. This endpoint is not available for managed service instances.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "Get credentials for a user-provided service instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceInstance Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_instances/{guid}/parameters": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nRetrieves the credentials for a user-provided service instance. This endpoint is not available for managed service instances.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "Queries the Service Broker for the parameters associated with this service instance. The broker catalog must have enabled the instances_retrievable feature for the Service Offering. Check the Service Offering object for the value of this feature flag.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceInstance Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_instances/{guid}/relationships/shared_spaces": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint lists the spaces that the service instance has been shared to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "List shared spaces relationship",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceInstance Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "guid",
                            "name",
                            "relationships.organization"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[space]",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[space.organization]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_instances.SharedSpacesRelationship"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nThis endpoint shares the service instance with the specified spaces. In order to share into a space the requesting user must be a space developer in the target space.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "Share a service instance to other spaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceInstance Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shared ServiceInstanceToOtherSpaces",
                        "name": "SharedServiceInstanceToOtherSpaces",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_instances.SharedServiceInstanceToOtherSpaces"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_instances.SharedSpacesRelationship"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_instances/{guid}/relationships/shared_spaces/usage_summary": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint returns the number of bound apps in spaces where the service instance has been shared to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "Get usage summary in shared spaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceInstance Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_instances.GetUsageSummaryInSharedSpace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_instances/{guid}/relationships/shared_spaces/{space_guid}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nThis endpoint unshares the service instance from the specified space. This will automatically unbind any applications bound to this service instance in the specified space. Unsharing a service instance from a space will not delete any service keys.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Instances"
                ],
                "summary": "Unshare a service instance from another space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceInstance Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SharedSpaces Guid",
                        "name": "space_guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_offerings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nThis endpoint retrieves the service offerings the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Offerings"
                ],
                "summary": "List service offerings",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by the available property; valid values are true or false",
                        "name": "available",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service broker GUIDs to filter by",
                        "name": "service_broker_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service broker names to filter by",
                        "name": "service_broker_names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space GUIDs to filter by",
                        "name": "space_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_broker]",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_offerings.ServiceOfferingList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_offerings/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nThis endpoint retrieves the service offering by GUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Offerings"
                ],
                "summary": "Get a service offering",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceOffering Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_broker]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_offerings.ServiceOffering"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer (only space-scoped brokers)'\nThis endpoint deletes a service offering. This is typically used to remove orphan service offerings from the Cloud Foundry database when they have been removed from the service broker catalog, or when the service broker has been removed.\nNote that this operation only affects the Cloud Foundry database, and no attempt is made to contact the service broker.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Offerings"
                ],
                "summary": "Delete a service offering",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceOffering Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "If true, any service plans, instances, and bindings associated with this service offering will also be deleted.",
                        "name": "purge",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer (only space-scoped brokers)'\nThis endpoint updates a service offering with labels and annotations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Offerings"
                ],
                "summary": "Update a service offering",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceOffering Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ServiceOffering",
                        "name": "UpdateServiceOffering",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_offerings.UpdateServiceOffering"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_offerings.UpdateServiceOffering"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_plans": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nThis endpoint retrieves the service plans the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Plans"
                ],
                "summary": "List service plans",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by the available property; valid values are true or false",
                        "name": "available",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of IDs provided by the service broker for the service plan to filter by",
                        "name": "broker_catalog_ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space GUIDs to filter by",
                        "name": "space_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization GUIDs to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization GUIDs to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service broker GUIDs to filter by",
                        "name": "service_broker_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service broker names to filter by",
                        "name": "service_broker_names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service Offering GUIDs to filter by",
                        "name": "service_offering_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service Offering names to filter by",
                        "name": "service_offering_names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service Instance GUIDs to filter by",
                        "name": "service_instance_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include a list of unique related resources in the response; valid values are space.organization and service_offering",
                        "name": "include",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_offering.service_broker]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_plans.ServicePlanList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_plans/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nThis endpoint retrieves the service plan by GUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Plans"
                ],
                "summary": "Get a service plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServicePlan Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "guid",
                            "name"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "fields[service_offering.service_broker]",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include a list of related resources in the response; valid values are space.organization and service_offering",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_plans.ServicePlan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer (only space-scoped brokers)'\nThis endpoint deletes a service plan. This is used to remove service plans from the Cloud Foundry database when they are no longer provided by the service broker.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Plans"
                ],
                "summary": "Delete a service plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServicePlan Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer (only space-scoped brokers)'\nThis endpoint updates a service plan with labels and annotations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Plans"
                ],
                "summary": "Update a service plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServicePlan Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Plan",
                        "name": "UpdatePlan",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/service_plans.UpdatePlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_plans.ServicePlan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_plans/{guid}/visibility": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nThis endpoint retrieves the service plan visibility for a given plan.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Plan Visibility"
                ],
                "summary": "Get a service plan visibility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServicePlan Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_plan_visibility.ServicePlanVisibility"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nThis endpoint applies a service plan visibility. It behaves similar to the PATCH service plan visibility endpoint but this endpoint will append to the existing list of organizations when the service plan is organization visible.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Plan Visibility"
                ],
                "summary": "Apply a service plan visibility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServicePlan Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ServicePlanVisibility",
                        "name": "UpdateServicePlanVisibility",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_plan_visibility.UpdateServicePlanVisibility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_plan_visibility.ServicePlanVisibility"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nThis endpoint updates a service plan visibility. It behaves similar to the POST service plan visibility endpoint but this endpoint will replace the existing list of organizations when the service plan is organization visible.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Plan Visibility"
                ],
                "summary": "Update a service plan visibility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServicePlan Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ServicePlanVisibility",
                        "name": "UpdateServicePlanVisibility",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_plan_visibility.UpdateServicePlanVisibility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_plan_visibility.ServicePlanVisibility"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_plans/{guid}/visibility/{organization_guid}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer (only space-scoped brokers)'\nThis endpoint removes an organization from a service plan visibility list of organizations. It is only defined for service plans which are org-restricted. It will fail with a HTTP status code of 422 for any other visibility type (e.g. Public).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Plan Visibility"
                ],
                "summary": "Remove organization from a service plan visibility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServicePlan Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_route_bindings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint retrieves the service route bindings the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Route Binding"
                ],
                "summary": "List service route bindings",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of route guids to filter by",
                        "name": "route_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service instance guids to filter by",
                        "name": "service_instance_guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service instance names to filter by",
                        "name": "service_instance_names",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service route binding guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include a list of unique related resources in the response; valid values are space and spaceorganization",
                        "name": "include",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_route_binding.ServiceRouteBindingList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, SpaceDeveloper'\nThis endpoint creates a new route service binding. The service instance and the route must be in the same space.\nTo bind a route to a user-provided service instance, the service instance must have the route_service_url property set.\nTo bind a route to a managed service instance, the service offering must be bindable, and the service offering must have route_forwarding set in the requires property.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Route Binding"
                ],
                "summary": "Create a service route binding",
                "parameters": [
                    {
                        "description": "Create ServiceRouteBinding",
                        "name": "CreateServiceRouteBinding",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_route_binding.CreateServiceRouteBinding"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/service_route_binding.ServiceRouteBinding"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/service_route_binding.ServiceRouteBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_route_bindings/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint retrieves the service route binding by GUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Route Binding"
                ],
                "summary": "Get a service route binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceRouteBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include a list of related resources in the response; valid values are space.organization and service_offering",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_route_binding.ServiceRouteBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nThis endpoint deletes a service route binding. When deleting route bindings originating from user provided service instances, the delete operation does not require interactions with service brokers, therefore the API will respond synchronously to the delete request. Consequently, deleting route bindings from managed service instances responds with a job which can be used to track the progress of the delete operation.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Route Binding"
                ],
                "summary": "Delete a service route binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceRouteBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nThis endpoint updates a service route binding with labels and annotations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Route Binding"
                ],
                "summary": "Update a service route binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceRouteBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ServiceRouteBinding",
                        "name": "UpdateServiceRouteBinding",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service_route_binding.UpdateServiceRouteBinding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_route_binding.ServiceRouteBinding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_route_bindings/{guid}/parameters": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Space Developer'\nQueries the Service Broker for the parameters associated with this service route binding. The broker catalog must have enabled the bindings_retrievable feature for the Service Offering. Check the Service Offering object for the value of this feature flag. This endpoint is not available for User-Provided Service Instances.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Route Binding"
                ],
                "summary": "Get parameters for a route binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceRouteBinding Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_usage_events": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieve all service usage events the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Usage Events"
                ],
                "summary": "List service usage events",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filters out events before and including the event with the given guid",
                        "name": "after_guid",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of app guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service instance types to filter by; valid values are managed_service_instance and user_provided_service_instance",
                        "name": "service_instance_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of service offering guids to filter by",
                        "name": "service_offering_guids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_usage_events.ServiceUsageEventList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_usage_events/actions/destructively_purge_all_and_reseed": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\nDestroys all existing events. Populates new usage events, one for each existing service instance. All populated events will have a created_at value of current time. There is the potential race condition if service instances are currently being created or deleted. The seeded usage events will have the same guid as the service instance.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Usage Events"
                ],
                "summary": "Purge and seed service usage events",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/service_usage_events/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor'\nRetrieve a service usage event.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Usage Events"
                ],
                "summary": "Get a service usage event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceUsageEvent Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service_usage_events.ServiceUsageEvent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/space/{guid}/routes": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted roles \"Admin\", \"Space Developer\"\nDeletes all routes in a space that are not mapped to any applications and not bound to any service instances.\nNote: unmapped=true is a required query parameter; always include it.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Delete unmapped routes for a space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "route guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "destination guid",
                        "name": "destination_guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "unmapped=true",
                        "name": "query",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/spaces": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieve all spaces the user has access to.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spaces"
                ],
                "summary": "List spaces",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space names to filter by",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of space guids to filter by",
                        "name": "guids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-delimited list of organization guids to filter by",
                        "name": "organization_guids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page to display; valid values are integers \u003e= 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page; valid values are 1 through 5000",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at, name, state",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A query string containing a list of label selector requirements",
                        "name": "label_selector",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include a list of unique related resources in the response; valid values are space and spaceorganization",
                        "name": "include",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "created_ats",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators",
                        "name": "updated_ats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/spaces.SpaceList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Org Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spaces"
                ],
                "summary": "Create a space",
                "parameters": [
                    {
                        "description": "Create Space",
                        "name": "Space",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spaces.Space"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/spaces.Space"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/spaces/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint retrieves the specified space object.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spaces"
                ],
                "summary": "Get a space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Optionally include additional related resources in the response; valid value is organization",
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/spaces.Space"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Org Manager'\nWhen a space is deleted, the user roles associated with the space will be deleted.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spaces"
                ],
                "summary": "Delete a space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Org Manager Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spaces"
                ],
                "summary": "Update a space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Space",
                        "name": "UpdateSpace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spaces.UpdateSpace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/spaces.Space"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/spaces/{guid}/actions/apply_manifest": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nApply changes specified in a manifest to the named apps and their underlying processes. The apps must reside in the space. These changes are additive and will not modify any unspecified properties or remove any existing environment variables, routes, or services.\nApply manifest will only trigger an immediate update for the “disk_quota”, “instances”, and “memory” properties. All other properties require an app restart to take effect.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manifests"
                ],
                "summary": "Apply a manifest to a space",
                "parameters": [
                    {
                        "format": "binary",
                        "description": "manifest.yml",
                        "name": "binary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Space Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/spaces/{guid}/features": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint retrieves the list of features for the specified space. Currently, the only feature on spaces is the SSH feature.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space Features"
                ],
                "summary": "List space features",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/space_features.SpaceFeatureList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/spaces/{guid}/features/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin, Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space Features"
                ],
                "summary": "Get a space feature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Feature Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/space_features.SpaceFeature"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space Features"
                ],
                "summary": "Update space features",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Feature Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update SpaceFeature",
                        "name": "SpaceFeature",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/space_features.SpaceFeature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/space_features.SpaceFeature"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/spaces/{guid}/manifest": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Space Developer'\nThis endpoint returns a JSON representation of the difference between the provided manifest and the current state of a space.\nCurrently, this endpoint can only diff version 1 manifests.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manifests"
                ],
                "summary": "Generate a manifest for an app",
                "parameters": [
                    {
                        "format": "binary",
                        "description": "manifest.yml",
                        "name": "binary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Space Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/spaces/{guid}/relationships/isolation_segment": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spaces"
                ],
                "summary": "Get assigned isolation segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin Admin Read-Only Global Auditor Org Manager Space Auditor Space Developer Space Manager'\nThis endpoint assigns an isolation segment to the space. The isolation segment must be entitled to the space’s parent organization.\nApps will not run in the newly assigned isolation segment until they are restarted.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spaces"
                ],
                "summary": "Manage isolation segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "IsolationSegment",
                        "name": "IsolationSegment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spaces.IsolationSegment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/stacks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\nRetrieve all stacks.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "List stacks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stacks.Stacks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "Create a stack",
                "parameters": [
                    {
                        "description": "Create Stack",
                        "name": "CreateStack",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/stacks.CreateStack"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stacks.Stack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/stacks/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles All Roles\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "Get a stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stacks.Stack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "Delete a stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Space Developer\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "Update a stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Stack",
                        "name": "UpdateStack",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/stacks.UpdateStack"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stacks.Stack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "List tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasks.AppTask"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Space Developer\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a task",
                "parameters": [
                    {
                        "description": "Create Task",
                        "name": "CreateTask",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasks.CreateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasks.Tasks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/tasks/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Admin Read-Only Admin Global Auditor Org Manager Space Auditor Space Developer Space Manage\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasks.Tasks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Space Developer\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Task",
                        "name": "UpdateTask",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasks.UpdateTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasks.Tasks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/tasks/{guid}/actions/cancel": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin Space Developer\nCancels a running task.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Cancel a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tasks Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cancel Tasks",
                        "name": "Tasks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasks.Tasks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasks.Tasks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted 'All Roles'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.GetUsers"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'Admin'\nCreating a user requires one value, a GUID. This creates a user in the Cloud Controller database.\nGenerally, the GUID should match the GUID of an already-created user in the UAA database, though this is not required.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "Create User",
                        "name": "CreateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/users.Users"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/users/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All Roles'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.Users"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin\nAll roles associated with a user will be deleted if the user is deleted.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles Admin\nUpdate a user’s metadata.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User",
                        "name": "Updateuser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.Updateuser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.Users"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        },
        "/v3/buildpacks/{guid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Permitted Roles 'All'\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buildpacks"
                ],
                "summary": "Get a buildpack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Buildpacks Guid",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buildpacks.BuildPack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/config.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app_features.AppFeature": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "app_features.AppFeatureList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app_features.AppFeature"
                    }
                }
            }
        },
        "app_features.UpdateAppFeature": {
            "type": "object",
            "required": [
                "enabled"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "app_usage_events.AppUsageEvent": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "buildpack": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "instance_count": {
                    "type": "object",
                    "properties": {
                        "current": {
                            "type": "integer"
                        },
                        "previous": {
                            "type": "integer"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "memory_in_mb_per_instance": {
                    "type": "object",
                    "properties": {
                        "current": {
                            "type": "integer"
                        },
                        "previous": {
                            "type": "integer"
                        }
                    }
                },
                "organization": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "process": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "space": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "state": {
                    "type": "object",
                    "properties": {
                        "current": {
                            "type": "string"
                        },
                        "previous": {
                            "type": "string"
                        }
                    }
                },
                "task": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "apps.App": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "lifecycle": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {
                                "buildpacks": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "stack": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "current_droplet": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "deployed_revisions": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "droplets": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "environment_variables": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "packages": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "processes": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "revisions": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "route_mappings": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "space": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "start": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        },
                        "stop": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        },
                        "tasks": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "space": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "apps.AppDroplet": {
            "type": "object",
            "properties": {
                "buildpacks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "buildpack_name": {
                                "type": "string"
                            },
                            "detect_output": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            }
                        }
                    }
                },
                "checksum": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "error": {
                    "type": "object"
                },
                "execution_metadata": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "image": {
                    "type": "object"
                },
                "lifecycle": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "assign_current_droplet": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        },
                        "download": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "package": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "process_types": {
                    "type": "object",
                    "properties": {
                        "rake": {
                            "type": "string"
                        },
                        "web": {
                            "type": "string"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "stack": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "apps.AppDropletAssociation": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "related": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "apps.AppEnv": {
            "type": "object",
            "properties": {
                "application_env_json": {
                    "type": "object",
                    "properties": {
                        "VCAP_APPLICATION": {
                            "type": "object",
                            "properties": {
                                "application_name": {
                                    "type": "string"
                                },
                                "application_uris": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "limits": {
                                    "type": "object",
                                    "properties": {
                                        "fds": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string"
                                },
                                "space_id": {
                                    "type": "string"
                                },
                                "space_name": {
                                    "type": "string"
                                },
                                "uris": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "users": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "environment_variables": {
                    "type": "object",
                    "properties": {
                        "RAILS_ENV": {
                            "type": "string"
                        }
                    }
                },
                "running_env_json": {
                    "type": "object",
                    "properties": {
                        "HTTP_PROXY": {
                            "type": "string"
                        }
                    }
                },
                "staging_env_json": {
                    "type": "object",
                    "properties": {
                        "GEM_CACHE": {
                            "type": "string"
                        }
                    }
                },
                "system_env_json": {
                    "type": "object",
                    "properties": {
                        "VCAP_SERVICES": {
                            "type": "object",
                            "properties": {
                                "mysql": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "binding_id": {
                                                "type": "string"
                                            },
                                            "binding_name": {
                                                "type": "string"
                                            },
                                            "credentials": {
                                                "type": "object",
                                                "properties": {
                                                    "password": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "instance_id": {
                                                "type": "string"
                                            },
                                            "instance_name": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "plan": {
                                                "type": "string"
                                            },
                                            "provider": {
                                                "type": "object"
                                            },
                                            "syslog_drain_url": {
                                                "type": "string"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "volume_mounts": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "apps.AppEnvVar": {
            "type": "object",
            "required": [
                "var"
            ],
            "properties": {
                "var": {
                    "type": "object"
                }
            }
        },
        "apps.AppEnvVariable": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "var": {
                    "type": "object"
                }
            }
        },
        "apps.AppList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.App"
                    }
                }
            }
        },
        "apps.AppPermission": {
            "type": "object",
            "properties": {
                "read_basic_data": {
                    "type": "boolean"
                },
                "read_sensitive_data": {
                    "type": "boolean"
                }
            }
        },
        "apps.AppSSH": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "apps.AppSetDroplet": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "required": [
                        "guid"
                    ],
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "apps.CreateApp": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "environment_variables": {
                    "type": "object"
                },
                "lifecycle": {
                    "type": "object"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "space": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [
                                        "guid"
                                    ],
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "apps.UpdateApp": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "lifecycle": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {
                                "buildpacks": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "stack": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "audit_events.AuditEvent": {
            "type": "object",
            "properties": {
                "actor": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "request": {
                            "type": "object",
                            "properties": {
                                "recursive": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "organization": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "space": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "target": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "audit_events.AuditEventList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/audit_events.AuditEvent"
                    }
                }
            }
        },
        "buildpacks.BuildPack": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "filename": {
                    "type": "object"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "upload": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "locked": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "stack": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "buildpacks.BuildPackList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/buildpacks.BuildPack"
                    }
                }
            }
        },
        "buildpacks.CreateBuildPack": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "locked": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "stack": {
                    "type": "string"
                }
            }
        },
        "buildpacks.UpdateBuildPack": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "locked": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "stack": {
                    "type": "string"
                }
            }
        },
        "builds.Build": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "droplet": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "error": {
                    "type": "object"
                },
                "guid": {
                    "type": "string"
                },
                "lifecycle": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {
                                "buildpacks": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "stack": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "droplet": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "package": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "builds.BuildList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/builds.Build"
                    }
                }
            }
        },
        "builds.CreateBuild": {
            "type": "object",
            "required": [
                "package"
            ],
            "properties": {
                "lifecycle": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {
                                "buildpacks": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "stack": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "environment": {
                                    "type": "string"
                                },
                                "internet-facing": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "package": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "staging_disk_in_mb": {
                    "type": "integer"
                },
                "staging_memory_in_mb": {
                    "type": "integer"
                }
            }
        },
        "builds.UpdateBuild": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        },
                        "lifecycle": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                }
                            }
                        },
                        "state": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "config.Error": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Errors"
                    }
                }
            }
        },
        "config.Errors": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "detail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "deployments.CreateDeployment": {
            "type": "object",
            "properties": {
                "droplet": {
                    "type": "object"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [
                                        "guid"
                                    ],
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "strategy": {
                    "type": "string"
                }
            }
        },
        "deployments.Deployment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "droplet": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "cancel": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "new_processes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "guid": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                },
                "previous_droplet": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "revision": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "details": {
                            "type": "object",
                            "properties": {
                                "last_successful_healthcheck": {
                                    "type": "string"
                                }
                            }
                        },
                        "reason": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    }
                },
                "strategy": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "deployments.DeploymentList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/deployments.Deployment"
                    }
                }
            }
        },
        "deployments.UpdateDeployment": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "domains.CreateDomain": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "internal": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "shared_organizations": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "guid": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "router_group": {
                    "type": "object"
                }
            }
        },
        "domains.Domain": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "internal": {
                    "type": "boolean"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "route_reservations": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "shared_organizations": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "shared_organizations": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "guid": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "router_group": {
                    "type": "object"
                },
                "supported_protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domains.DomainList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domains.Domain"
                    }
                }
            }
        },
        "domains.OrganizationDomainsList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "type": "string"
                            },
                            "guid": {
                                "type": "string"
                            },
                            "internal": {
                                "type": "boolean"
                            },
                            "links": {
                                "type": "object",
                                "properties": {
                                    "route_reservations": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "router_group": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "metadata": {
                                "type": "object",
                                "properties": {
                                    "annotations": {
                                        "type": "object"
                                    },
                                    "labels": {
                                        "type": "object"
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "relationships": {
                                "type": "object",
                                "properties": {
                                    "organization": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "shared_organizations": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "router_group": {
                                "type": "object",
                                "properties": {
                                    "guid": {
                                        "type": "string"
                                    }
                                }
                            },
                            "supported_protocols": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "updated_at": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "domains.ShareDomains": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "guid"
                        ],
                        "properties": {
                            "guid": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "domains.UpdateDomains": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "droplets.CopyDroplet": {
            "type": "object",
            "properties": {
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [
                                        "guid"
                                    ],
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "droplets.CreateDroplet": {
            "type": "object",
            "properties": {
                "process_types": {
                    "type": "object",
                    "properties": {
                        "rake": {
                            "type": "string"
                        },
                        "web": {
                            "type": "string"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "required": [
                        "app"
                    ],
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "droplets.Droplet": {
            "type": "object",
            "properties": {
                "buildpacks": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "buildpack_name": {
                                "type": "string"
                            },
                            "detect_output": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            }
                        }
                    }
                },
                "checksum": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "error": {
                    "type": "object"
                },
                "execution_metadata": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "image": {
                    "type": "object"
                },
                "lifecycle": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "assign_current_droplet": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        },
                        "download": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "package": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "process_types": {
                    "type": "object",
                    "properties": {
                        "rake": {
                            "type": "string"
                        },
                        "web": {
                            "type": "string"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "stack": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "droplets.DropletList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/droplets.Droplet"
                    }
                }
            }
        },
        "droplets.UpdateDroplet": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "environment_variable_groups.EnvironmentVariableGroup": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "var": {
                    "type": "object",
                    "properties": {
                        "foo": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "feature_flags.FeatureFlags": {
            "type": "object",
            "properties": {
                "custom_error_message": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "feature_flags.GetFeatureFlags": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "custom_error_message": {
                                "type": "string"
                            },
                            "enabled": {
                                "type": "boolean"
                            },
                            "links": {
                                "type": "object",
                                "properties": {
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "updated_at": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "feature_flags.UpdateFeatureFlags": {
            "type": "object",
            "properties": {
                "custom_error_message": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "info.PlatformInfo": {
            "type": "object",
            "properties": {
                "build": {
                    "type": "string"
                },
                "cli_version": {
                    "type": "object",
                    "properties": {
                        "minimum": {
                            "type": "string"
                        },
                        "recommended": {
                            "type": "string"
                        }
                    }
                },
                "custom": {
                    "type": "object",
                    "properties": {
                        "arbitrary": {
                            "type": "string"
                        }
                    }
                },
                "description": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "support": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "info.PlatformUsageSummary": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "usage_summary": {
                    "type": "object",
                    "properties": {
                        "memory_in_mb": {
                            "type": "integer"
                        },
                        "started_instances": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "isolation_segments.CreateIsolationSegment": {
            "type": "object",
            "required": [
                "metadata",
                "name"
            ],
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "isolation_segments.EntitleOrganizationsIsolationSegment": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "guid": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "isolation_segments.IsolationSegment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "organizations": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "isolation_segments.IsolationSegments": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "type": "string"
                            },
                            "guid": {
                                "type": "string"
                            },
                            "links": {
                                "type": "object",
                                "properties": {
                                    "organizations": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "metadata": {
                                "type": "object",
                                "properties": {
                                    "annotations": {
                                        "type": "object"
                                    },
                                    "labels": {
                                        "type": "object"
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "updated_at": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "isolation_segments.OrganizationsRelationship": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "guid": {
                                "type": "string"
                            }
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "related": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "isolation_segments.SpacesRelationship": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "guid": {
                                "type": "string"
                            }
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "isolation_segments.UpdateIsolationSegment": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "jobs.Jobs": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "operation": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "organization_quotas.ApplyOrganizationQuotas": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "guid"
                        ],
                        "properties": {
                            "guid": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "organization_quotas.CreateOrganizationQuotas": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "apps": {
                    "type": "object",
                    "properties": {
                        "per_app_tasks": {
                            "type": "integer"
                        },
                        "per_process_memory_in_mb": {
                            "type": "integer"
                        },
                        "total_instances": {
                            "type": "integer"
                        },
                        "total_memory_in_mb": {
                            "type": "integer"
                        }
                    }
                },
                "domains": {
                    "type": "object",
                    "properties": {
                        "total_domains": {
                            "type": "integer"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organizations": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "guid": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "routes": {
                    "type": "object",
                    "properties": {
                        "total_reserved_ports": {
                            "type": "integer"
                        },
                        "total_routes": {
                            "type": "integer"
                        }
                    }
                },
                "services": {
                    "type": "object",
                    "properties": {
                        "paid_services_allowed": {
                            "type": "boolean"
                        },
                        "total_service_instances": {
                            "type": "integer"
                        },
                        "total_service_keys": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "organization_quotas.OrganizationQuota": {
            "type": "object",
            "properties": {
                "apps": {
                    "type": "object",
                    "properties": {
                        "per_app_tasks": {
                            "type": "integer"
                        },
                        "per_process_memory_in_mb": {
                            "type": "integer"
                        },
                        "total_instances": {
                            "type": "integer"
                        },
                        "total_memory_in_mb": {
                            "type": "integer"
                        }
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "domains": {
                    "type": "object",
                    "properties": {
                        "total_domains": {
                            "type": "integer"
                        }
                    }
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organizations": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "guid": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "routes": {
                    "type": "object",
                    "properties": {
                        "total_reserved_ports": {
                            "type": "integer"
                        },
                        "total_routes": {
                            "type": "integer"
                        }
                    }
                },
                "services": {
                    "type": "object",
                    "properties": {
                        "paid_services_allowed": {
                            "type": "boolean"
                        },
                        "total_service_instances": {
                            "type": "integer"
                        },
                        "total_service_keys": {
                            "type": "integer"
                        }
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "organization_quotas.UpdateOrganizationQuota": {
            "type": "object",
            "properties": {
                "apps": {
                    "type": "object",
                    "properties": {
                        "per_app_tasks": {
                            "type": "integer"
                        },
                        "per_process_memory_in_mb": {
                            "type": "integer"
                        },
                        "total_instances": {
                            "type": "integer"
                        },
                        "total_memory_in_mb": {
                            "type": "integer"
                        }
                    }
                },
                "domains": {
                    "type": "object",
                    "properties": {
                        "total_private_domains": {
                            "type": "integer"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "routes": {
                    "type": "object",
                    "properties": {
                        "total_reserved_ports": {
                            "type": "integer"
                        },
                        "total_routes": {
                            "type": "integer"
                        }
                    }
                },
                "services": {
                    "type": "object",
                    "properties": {
                        "paid_services_allowed": {
                            "type": "boolean"
                        },
                        "total_service_instances": {
                            "type": "integer"
                        },
                        "total_service_keys": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "organizations.CreateOrganizations": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "suspended": {
                    "type": "boolean"
                }
            }
        },
        "organizations.DefaultIsolationSegmentOrganizations": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "required": [
                        "guid"
                    ],
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "organizations.Organizations": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "default_domain": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "domains": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "quota": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "quota": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "suspended": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "organizations.UpdateOrganizations": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "suspended": {
                    "type": "boolean"
                }
            }
        },
        "packages.CopyPackage": {
            "type": "object",
            "required": [
                "relationships"
            ],
            "properties": {
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "packages.CreatePackage": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "checksum": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "object"
                                }
                            }
                        },
                        "image": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "required": [
                        "app"
                    ],
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "packages.Package": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "checksum": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "object"
                                }
                            }
                        },
                        "error": {
                            "type": "object"
                        }
                    }
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "download": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "upload": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "packages.UpdatePackage": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "processes.HealthCheck": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "endpoint": {
                            "type": "string"
                        },
                        "invocation_timeout": {
                            "type": "integer"
                        },
                        "timeout": {
                            "type": "integer"
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "processes.Process": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "disk_in_mb": {
                    "type": "integer"
                },
                "guid": {
                    "type": "string"
                },
                "health_check": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {
                                "timeout": {
                                    "type": "object"
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "instances": {
                    "type": "integer"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "scale": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "space": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "stats": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "memory_in_mb": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "revision": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "processes.ScaleProcess": {
            "type": "object",
            "properties": {
                "disk_in_mb": {
                    "type": "integer"
                },
                "instances": {
                    "type": "integer"
                },
                "memory_in_mb": {
                    "type": "integer"
                }
            }
        },
        "processes.UpdateProcess": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/processes.HealthCheck"
                    }
                }
            }
        },
        "resource_matches.ResourceMatch": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "size_in_bytes"
                        ],
                        "properties": {
                            "checksum": {
                                "type": "object",
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "mode": {
                                "type": "string"
                            },
                            "path": {
                                "type": "string"
                            },
                            "size_in_bytes": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "roles.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "user": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "space": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                }
                            }
                        },
                        "user": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "routes.Route": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "app": {
                                "type": "object",
                                "properties": {
                                    "guid": {
                                        "type": "string"
                                    },
                                    "process": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "guid": {
                                "type": "string"
                            },
                            "port": {
                                "type": "integer"
                            },
                            "weight": {
                                "type": "object"
                            }
                        }
                    }
                },
                "guid": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "destinations": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "domain": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "space": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "domain": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "space": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service_brokers.CreateServiceBroker": {
            "type": "object",
            "required": [
                "authentication",
                "name",
                "url"
            ],
            "properties": {
                "authentication": {
                    "type": "object",
                    "required": [
                        "credentials",
                        "type"
                    ],
                    "properties": {
                        "credentials": {
                            "type": "object",
                            "required": [
                                "password",
                                "username"
                            ],
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "space": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service_brokers.ServiceBroker": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_offerings": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "space": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "space": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service_brokers.ServiceBrokerList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service_brokers.ServiceBroker"
                    }
                }
            }
        },
        "service_brokers.UpdateServiceBroker": {
            "type": "object",
            "properties": {
                "authentication": {
                    "type": "object",
                    "properties": {
                        "credentials": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service_credential_bindings.CreateServiceCredentialBinding": {
            "type": "object",
            "required": [
                "name",
                "relationships",
                "type"
            ],
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object"
                },
                "relationships": {
                    "type": "object",
                    "required": [
                        "service_instance"
                    ],
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "service_instance": {
                            "type": "object",
                            "required": [
                                "data"
                            ],
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "required": [
                                        "guid"
                                    ],
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service_credential_bindings.ServiceCredentialBinding": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "last_operation": {
                    "type": "object",
                    "properties": {
                        "created_at": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "details": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_instance": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "service_instance": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "service_credential_bindings.ServiceCredentialBindingList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service_credential_bindings.ServiceCredentialBinding"
                    }
                }
            }
        },
        "service_credential_bindings.UpdateServiceCredentialBinding": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "service_instances.CreateServiceInstanceProvide": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "credentials": {
                    "type": "object"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "foo": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "baz": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "required": [
                        "space"
                    ],
                    "properties": {
                        "space": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "route_service_url": {
                    "type": "string"
                },
                "syslog_drain_url": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service_instances.GetUsageSummaryInSharedSpace": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_instance": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "shared_spaces": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "usage_summary": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "bound_app_count": {
                                "type": "integer"
                            },
                            "space": {
                                "type": "object",
                                "properties": {
                                    "guid": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "service_instances.ServiceInstance": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "dashboard_url": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "last_operation": {
                    "type": "object",
                    "properties": {
                        "created_at": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_credential_bindings": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_plan": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_route_bindings": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "shared_spaces": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "space": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "maintenance_info": {
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "service_plan": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "space": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "upgrade_available": {
                    "type": "boolean"
                }
            }
        },
        "service_instances.ServiceInstanceList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service_instances.ServiceInstance"
                    }
                }
            }
        },
        "service_instances.SharedServiceInstanceToOtherSpaces": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "guid": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "service_instances.SharedSpacesRelationship": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "guid": {
                                "type": "string"
                            }
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "service_instances.UpdateServiceInstance": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "service_plan": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service_offerings.ServiceOffering": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "broker_catalog": {
                    "type": "object",
                    "properties": {
                        "features": {
                            "type": "object",
                            "properties": {
                                "allow_context_updates": {
                                    "type": "boolean"
                                },
                                "bindable": {
                                    "type": "boolean"
                                },
                                "bindings_retrievable": {
                                    "type": "boolean"
                                },
                                "instances_retrievable": {
                                    "type": "boolean"
                                },
                                "plan_updateable": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "id": {
                            "type": "string"
                        },
                        "metadata": {
                            "type": "object",
                            "properties": {
                                "shareable": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "documentation_url": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_broker": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_plans": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "service_broker": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "shareable": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "service_offerings.ServiceOfferingList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service_offerings.ServiceOffering"
                    }
                }
            }
        },
        "service_offerings.UpdateServiceOffering": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "service_plan_visibility.ServicePlanVisibility": {
            "type": "object",
            "properties": {
                "organizations": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "guid": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service_plan_visibility.UpdateServicePlanVisibility": {
            "type": "object",
            "properties": {
                "organizations": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "guid": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service_plans.ServicePlan": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "broker_catalog": {
                    "type": "object",
                    "properties": {
                        "features": {
                            "type": "object",
                            "properties": {
                                "bindable": {
                                    "type": "boolean"
                                },
                                "plan_updateable": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "id": {
                            "type": "string"
                        },
                        "maximum_polling_duration": {
                            "type": "object"
                        },
                        "metadata": {
                            "type": "object",
                            "properties": {
                                "custom-key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "costs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "amount": {
                                "type": "number"
                            },
                            "currency": {
                                "type": "string"
                            },
                            "unit": {
                                "type": "string"
                            }
                        }
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "free": {
                    "type": "boolean"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_offering": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "visibility": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "maintenance_info": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "version": {
                            "type": "string"
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "service_offering": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "schemas": {
                    "type": "object",
                    "properties": {
                        "service_binding": {
                            "type": "object",
                            "properties": {
                                "create": {
                                    "type": "object",
                                    "properties": {
                                        "parameters": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        },
                        "service_instance": {
                            "type": "object",
                            "properties": {
                                "create": {
                                    "type": "object",
                                    "properties": {
                                        "parameters": {
                                            "type": "object",
                                            "properties": {
                                                "$schema": {
                                                    "type": "string"
                                                },
                                                "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                        "billing-account": {
                                                            "type": "object",
                                                            "properties": {
                                                                "description": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "update": {
                                    "type": "object",
                                    "properties": {
                                        "parameters": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "visibility_type": {
                    "type": "string"
                }
            }
        },
        "service_plans.ServicePlanList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service_plans.ServicePlan"
                    }
                }
            }
        },
        "service_plans.UpdatePlan": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "service_route_binding.CreateServiceRouteBinding": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "parameters": {
                    "type": "object"
                },
                "relationships": {
                    "type": "object",
                    "required": [
                        "route",
                        "service_instance"
                    ],
                    "properties": {
                        "route": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "service_instance": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "service_route_binding.ServiceRouteBinding": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "last_operation": {
                    "type": "object",
                    "properties": {
                        "created_at": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "parameters": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "route": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "service_instance": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "foo": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "baz": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "route": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "service_instance": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "route_service_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "service_route_binding.ServiceRouteBindingList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service_route_binding.ServiceRouteBinding"
                    }
                }
            }
        },
        "service_route_binding.UpdateServiceRouteBinding": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "service_usage_events.ServiceUsageEvent": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "organization": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                },
                "service_broker": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "service_instance": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "service_offering": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "service_plan": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "space": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "service_usage_events.ServiceUsageEventList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service_usage_events.ServiceUsageEvent"
                    }
                }
            }
        },
        "space_features.SpaceFeature": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "space_features.SpaceFeatureList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/space_features.SpaceFeature"
                    }
                }
            }
        },
        "spaces.IsolationSegment": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "guid": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "spaces.Space": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "apply_manifest": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        },
                        "features": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "organization": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "organization": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "quota": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "spaces.SpaceList": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spaces.Space"
                    }
                }
            }
        },
        "spaces.UpdateSpace": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "stacks.CreateStack": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "stacks.Stack": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "stacks.Stacks": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "guid": {
                                "type": "string"
                            },
                            "links": {
                                "type": "object",
                                "properties": {
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "metadata": {
                                "type": "object",
                                "properties": {
                                    "annotations": {
                                        "type": "object"
                                    },
                                    "labels": {
                                        "type": "object"
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "updated_at": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "stacks.UpdateStack": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "tasks.AppTask": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object"
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tasks.Tasks"
                    }
                }
            }
        },
        "tasks.CreateTask": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "droplet_guid": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "type": "object",
                    "properties": {
                        "process": {
                            "type": "object",
                            "properties": {
                                "guid": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "tasks.Tasks": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "disk_in_mb": {
                    "type": "integer"
                },
                "droplet_guid": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "cancel": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        },
                        "droplet": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "memory_in_mb": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "relationships": {
                    "type": "object",
                    "properties": {
                        "app": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "guid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "result": {
                    "type": "object",
                    "properties": {
                        "failure_reason": {
                            "type": "object"
                        }
                    }
                },
                "sequence_id": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "tasks.UpdateTask": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "users.CreateUser": {
            "type": "object",
            "required": [
                "guid"
            ],
            "properties": {
                "guid": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "users.GetUsers": {
            "type": "object",
            "properties": {
                "pagination": {
                    "type": "object",
                    "properties": {
                        "first": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "next": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "previous": {
                            "type": "object"
                        },
                        "total_pages": {
                            "type": "integer"
                        },
                        "total_results": {
                            "type": "integer"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "created_at": {
                                "type": "string"
                            },
                            "guid": {
                                "type": "string"
                            },
                            "links": {
                                "type": "object",
                                "properties": {
                                    "self": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "metadata": {
                                "type": "object",
                                "properties": {
                                    "annotations": {
                                        "type": "object"
                                    },
                                    "labels": {
                                        "type": "object"
                                    }
                                }
                            },
                            "origin": {
                                "type": "object"
                            },
                            "presentation_name": {
                                "type": "string"
                            },
                            "updated_at": {
                                "type": "string"
                            },
                            "username": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "users.Updateuser": {
            "type": "object",
            "required": [
                "metadata"
            ],
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "note": {
                                    "type": "string"
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "properties": {
                                "enviroment": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "users.Users": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "labels": {
                            "type": "object"
                        }
                    }
                },
                "origin": {
                    "type": "string"
                },
                "presentation_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "cf-Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
